# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Run unit test # nama ini akan ditampilkan di actions pada github pages

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test: # JOB
    runs-on: ubuntu-latest # RUNNER

    # for reference search in google : github actions postgres
    # services = list external services that we want to run together with our jobs
    services: # Service containers to run with `container-job`
        postgres: # Label used to access the service container
            image: postgres:15.4-alpine3.18 # Docker Hub image
            
            env: # Provide env variables for postgres
                POSTGRES_USER: tech_school
                POSTGRES_PASSWORD: 21204444
                POSTGRES_DB: simple_bank
            # Set health checks to wait until postgres has started
            # memberitahu runner bagaimana caranya mengecek apakah postgres sudah berjalan dengan sukses atau tidak, jadi runner tahu kapan untuk memulai langkah selanjutnya di workflow. ini diperlukan karena kita perlu mengetes menjalankan ps terlebih dahulu sebelum melakukan tes transaksi" didalamnya 
            options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5
            # spesifi port yang kita ingin expose ke external host
            #  2023/03/13 17:04:24 error: dial tcp [::1]:5432: connect: connection refused
            ports:
                - 5432:5432

    steps: #STEPS
    - name: Set up Go
      uses: actions/setup-go@v4 # existing github ACTION
      with: # with provide input parameters to this
        go-version: '1.21.0' 
      id: go # hanya sebuah unik identifier dari step ini, we might need it if we want to refer to this step in other context

    - name: Check out code into the Go module directiory # check out the code of this repos into the runner
      uses: actions/checkout@v3 

    # no need this step because go mod will automaticall download missing libraries or run the test
    # - name: Get dependencies
    #   run : |
    #     go get -v -t -d ./...
    #     if [ -f Gopkg.toml ];then
    #         curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    #         dep ensure
    #     fi

    - name: install migration golang
    # | digunakan untuk membuat multiple line command
    # download migrate lalu unzip dan pindahkan ke usr/bin dan ubah namanya menjadi migrate
    # which migrate = lokasi dimana migrate terinstall di ubuntu
      run: |
       curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
       sudo mv migrate /usr/bin 
       which migrate

    - name: run migration up
      run: make migrateup

    # no need because app will be built automatically when we run go test
    # - name: Build
    #   run: go build -v ./... # ourself ACTION

    - name: Test
      run: make test
